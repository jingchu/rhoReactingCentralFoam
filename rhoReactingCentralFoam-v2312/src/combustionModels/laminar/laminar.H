/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | www.openfoam.com
     \\/     M anipulation  |
-------------------------------------------------------------------------------
    Copyright (C) 2013-2017 OpenFOAM Foundation
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::combustionModels::laminar

Group
    grpCombustionModels

Description
    Laminar combustion model.

SourceFiles
    laminar.C

\*---------------------------------------------------------------------------*/

#ifndef combustionModels_laminar_H
#define combustionModels_laminar_H

#include "ChemistryCombustion.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
    namespace combustionModels
    {

        /*---------------------------------------------------------------------------*\
                                    Class laminar Declaration
        \*---------------------------------------------------------------------------*/

        template<class ReactionThermo>
        class laminar
            :
            public ChemistryCombustion<ReactionThermo>
        {
            // Private data

            //- Integrate reaction rate over the time-step
            //  using the selected ODE solver
            bool integrateReactionRate_;

        protected:

            // Protected Member Functions

            //- Return the chemical time scale
            tmp<volScalarField> tc() const;

        private:

            // Private Member Functions

            //- No copy construct
            laminar( const laminar& ) = delete;

            //- No copy assignment
            void operator=( const laminar& ) = delete;


        public:

            //- Runtime type information
            TypeName( "laminar" );


            // Constructors

            //- Construct from components
            laminar
            (
                const word& modelType,
                ReactionThermo& thermo,
                const compressibleTurbulenceModel& turb,
                const word& combustionProperties
            );


            //- Destructor
            virtual ~laminar();


            // Member Functions

            //- Correct combustion rate
            virtual void correct();

            //- Fuel consumption rate matrix.
            virtual tmp<fvScalarMatrix> R( volScalarField& Y ) const;
	    virtual tmp<volScalarField> R2(volScalarField& Y) const;

            //- Heat release rate [kg/m/s3]
            virtual tmp<volScalarField> Qdot() const;

            //- Update properties from given dictionary
            virtual bool read();
        };


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

    } // End namespace combustionModels
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#ifdef NoRepository
#include "laminar.C"
#endif

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
